%div{ :style => "display:none" }
  #edit-macro=t :help_macro_edit
  #delete-macro=t :help_macro_delete
  #edit-step=t :help_macro_step_edit
  #delete-step=t :help_macro_step_delete

%h1.underline
  = @macro.name
  %span.fs-5
    = link_to edit_macro_path(@macro), title: t(:help_macro_edit) do
      = fa_icon "edit"
      = t(:generic_edit)


.row.mt-1
  .col-sm-2.fw-bold.me-2= t(:label_macro_name)
  .col-sm-auto= @macro.name
.row.mt-1
  .col-sm-2.fw-bold.me-2= t(:label_macro_description)
  .col-sm-auto= @macro.description
.row.mt-1
  .col-sm-2.fw-bold.me-2= t(:label_macro_owner)
  .col-sm-auto= @macro.user.nil? ? '-' : link_to(@macro.user.login, user_path(@macro.user))
.row.mt-1
  .col-sm-2.fw-bold.me-2= t(:label_macro_active)
  .col-sm-auto= @macro.active? ? t(:generic_yes) : t(:generic_no)

%h1.underline.mt-4=t :title_macro_steps

%table.table#steps-table
  %tr
    %th=t :label_macro_step_position
    %th=t :label_macro_step_action
    %th=t :label_macro_step_type
    %th=t :label_macro_step_name
    %th=t :label_macro_step_priority
    %th=t :label_macro_step_content
    %th
  = render :partial => @macro.macro_steps

= link_to '#', onclick:'displayRecordForm(); return false' do
  = fa_icon('plus', class: 'text-success')
  = t(:label_macro_step_create_new)

#record-form-div{ :style => 'display:none' }
  = form_for( [@macro, @macro.macro_steps.build], remote: true, html: { id: 'record-form' } ) do |f|
    = f.hidden_field :macro_id

    .form-group.row.mb-3.all
      = f.label :position, t(:label_macro_step_position), class: 'col-sm-2 col-form-label'
      .col-sm-10= f.text_field :position, class: 'form-control', placeholder: @macro.macro_steps.size

    .form-group.row.mb-3.all
      = f.label :action, t(:label_macro_step_action), class: 'col-sm-2 col-form-label'
      .col-sm-10= f.select :action, MacroStep::ACTION_TYPES.invert, {}, class: 'form-select', title: t(:help_macro_actions)

    .form-group.row.mb-3.all
      = f.label :record_type, t(:label_domain_record_type), class: 'col-sm-2 col-form-label'
      .col-sm-10= f.select :record_type, Macro.record_types.map { |t| [t,t] }, {}, class: 'form-select'

    .form-group.row.mb-3.all
      = f.label :name, t(:label_domain_record_host), class: 'col-sm-2 col-form-label'
      .col-sm-10= f.text_field :name, class: 'form-control', placeholder: "", title: t(:help_macro_name_field)

    .form-group.row.mb-3.rt-mx.rt-srv{ style: 'display: none' }
      = f.label :prio, t(:label_domain_record_priority), class: 'col-sm-2 col-form-label'
      .col-sm-10= f.text_field :prio, class: 'form-control', placeholder: ""

    .form-group.row.mb-3.all
      = f.label :content, t(:label_domain_record_data), class: 'col-sm-2 col-form-label'
      .col-sm-10= f.text_field :content, class: 'form-control', title: t(:help_macro_content_field)

    .form-group.row.mb-3.all
      .col-sm-10.offset-sm-2
        = submit_tag t(:generic_save), class: 'btn btn-primary'
        = link_to_function t(:generic_cancel), "hideAll()", class: 'btn btn-secondary'


:javascript
  // Blatantly copied from record templates, needs to be unified
  function hideAll() {
    $('#record-form-div').hide();
  }
  function displayRecordForm() {
    $('#record-form-div').show();
  }
  function editRecordTemplate(i){
    $('#show_macro_step_' + i).hide();
    $('#edit_macro_step_' + i).show();
  }
  function hideRecordTemplate(i) {
    $('#show_macro_step_' + i).show();
    $('#edit_macro_step_' + i).hide();
  }
  function toggleRecordFields(v){
    t = 'rt-' + v.toLowerCase();
    $('#record-form-div .form-group').each(function(){
      if($(this).hasClass(t) || $(this).hasClass('all'))
        $(this).show();
      else
        $(this).hide();
    });
  }
